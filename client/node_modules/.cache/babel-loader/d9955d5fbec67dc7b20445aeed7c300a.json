{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-inseon/Desktop/portfolio/movie-app/client/src/components/SearchForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { memo, useState, useCallback, useEffect } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Header, InputWrapper, SearchFormWrapper, SearchOptionWrapper } from \"../../routes/Search/styles\";\nimport { searchKeywordState } from \"../../states/searchKeywordState\";\nimport OptionButton from \"../OptionButton\";\nimport { genreListState, countryListState, genreState, countryState } from \"../../states/optionListState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = _ref => {\n  _s();\n\n  let {\n    setMovies\n  } = _ref;\n  const genreList = useRecoilValue(genreListState);\n  const countryList = useRecoilValue(countryListState);\n  const [value, setValue] = useRecoilState(searchKeywordState);\n  const [genre, setGenre] = useRecoilState(genreState);\n  const [country, setCountry] = useRecoilState(countryState);\n  const [focus, setFocus] = useState(false);\n  const onSubmitSearch = useCallback(async e => {\n    e.preventDefault();\n    setValue(e.target.value);\n\n    try {\n      const {\n        data\n      } = await axios.get('/api/search', {\n        params: {\n          query: e.target.value,\n          genre,\n          country\n        }\n      });\n      setMovies(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [value, genre, country]);\n  const onChangeValue = useCallback(async e => {\n    setFocus(true);\n    setValue(e.target.value);\n    console.log(e.target.value); // try {\n    //   const { data } = await axios.get('/api/search', {\n    //     params: {\n    //       query: e.target.value,\n    //       genre,\n    //       country,\n    //     },\n    //   });\n    //   setMovies(data);\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  }, []);\n  useEffect(() => {\n    const {\n      data\n    } = axios.get('/api/search', {\n      params: {\n        query: value,\n        genre,\n        country\n      }\n    });\n    setMovies(data);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(SearchFormWrapper, {\n    onSubmit: onSubmitSearch,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"\\uC601\\uD654 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n      focus: focus,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onChangeValue,\n        placeholder: \"\\uD0A4\\uC6CC\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchOptionWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {\n        title: \"\\uC7A5\\uB974\",\n        data: genreList,\n        setState: setGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionButton, {\n        title: \"\\uAD6D\\uAC00\",\n        data: countryList,\n        setState: setCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"gLLp/iYZmZmCFtyQo12l620RJqc=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = SearchForm;\nexport default _c2 = /*#__PURE__*/memo(SearchForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useCallback","useEffect","SearchIcon","axios","useRecoilState","useRecoilValue","Header","InputWrapper","SearchFormWrapper","SearchOptionWrapper","searchKeywordState","OptionButton","genreListState","countryListState","genreState","countryState","SearchForm","setMovies","genreList","countryList","value","setValue","genre","setGenre","country","setCountry","focus","setFocus","onSubmitSearch","e","preventDefault","target","data","get","params","query","error","console","onChangeValue","log"],"sources":["/Users/hwang-inseon/Desktop/portfolio/movie-app/client/src/components/SearchForm/index.jsx"],"sourcesContent":["import {memo, useState, useCallback, useEffect} from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {Header, InputWrapper, SearchFormWrapper, SearchOptionWrapper} from \"../../routes/Search/styles\";\nimport {searchKeywordState} from \"../../states/searchKeywordState\";\nimport OptionButton from \"../OptionButton\";\nimport {genreListState, countryListState, genreState, countryState} from \"../../states/optionListState\";\n\nconst SearchForm = ({ setMovies }) => {\n  const genreList = useRecoilValue(genreListState);\n  const countryList = useRecoilValue(countryListState);\n\n  const [value, setValue] = useRecoilState(searchKeywordState);\n  const [genre, setGenre] = useRecoilState(genreState);\n  const [country, setCountry] = useRecoilState(countryState);\n\n  const [focus, setFocus] = useState(false);\n\n  const onSubmitSearch = useCallback(async (e) => {\n    e.preventDefault();\n    setValue(e.target.value);\n    try {\n      const { data } = await axios.get('/api/search', {\n        params: {\n          query: e.target.value,\n          genre,\n          country,\n        },\n      });\n      setMovies(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [value, genre, country]);\n\n  const onChangeValue = useCallback(async (e) => {\n    setFocus(true);\n    setValue(e.target.value);\n    console.log(e.target.value);\n\n    // try {\n    //   const { data } = await axios.get('/api/search', {\n    //     params: {\n    //       query: e.target.value,\n    //       genre,\n    //       country,\n    //     },\n    //   });\n    //   setMovies(data);\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  }, []);\n\n  useEffect(() => {\n    const { data } = axios.get('/api/search', {\n      params: {\n        query: value,\n        genre,\n        country,\n      },\n    });\n    setMovies(data);\n  }, [value]);\n\n  return (\n    <SearchFormWrapper onSubmit={onSubmitSearch}>\n      <Header>\n        영화 검색\n      </Header>\n      <InputWrapper focus={focus}>\n        <input\n          type=\"text\"\n          onChange={onChangeValue}\n          placeholder=\"키워드\"\n        />\n        <SearchIcon />\n      </InputWrapper>\n      <SearchOptionWrapper>\n        <OptionButton title=\"장르\" data={genreList} setState={setGenre} />\n        <OptionButton title=\"국가\" data={countryList} setState={setCountry} />\n      </SearchOptionWrapper>\n    </SearchFormWrapper>\n  );\n};\n\nexport default memo(SearchForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}