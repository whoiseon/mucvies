{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-inseon/Desktop/portfolio/movie-app/client/src/routes/Ranking/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport Stack from \"@mui/material/Stack\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { BoxOfficeMovieCard, Header, SkeletonWrapper } from \"../BoxOffice/styles\";\nimport { RankingMovieCard, RankingWrapper } from \"./styles\";\nimport { rankingState } from \"../../states/rankingState\";\nimport RankingCard from \"../../components/RankingCard\";\nimport { CardWrapper, MovieImg, MovieInfo } from \"../../components/BoxOfficeCard/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ranking = () => {\n  _s();\n\n  const [ranking, setRanking] = useRecoilState(rankingState);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchRanking = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_DB_HOST}/api/ranking`);\n      setRanking(data);\n      setIsLoading(false);\n    } catch (error) {\n      let message = 'Unknown Error';\n      if (error instanceof Error) message = error.message;\n      console.log(message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n  const fakeArrayToSkeleton = Array.from({\n    length: 20\n  }, (v, i) => i);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC608\\uB9E4 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RankingWrapper, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(BoxOfficeMovieCard, {\n            children: fakeArrayToSkeleton.map((v, i) => {\n              return /*#__PURE__*/_jsxDEV(CardWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(MovieImg, {\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"rounded\",\n                    width: \"100%\",\n                    height: 300\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      variant: \"rounded\",\n                      width: 100,\n                      height: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      variant: \"rounded\",\n                      width: \"100%\",\n                      height: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this)]\n              }, v, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(RankingMovieCard, {\n        children: ranking === null || ranking === void 0 ? void 0 : ranking.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(RankingCard, {\n            data: data\n          }, data.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Ranking, \"0qLSnxLp/0jnnT4hUe05ltw/jH4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Ranking;\nexport default Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"names":["useCallback","useEffect","useState","axios","useRecoilState","Stack","Skeleton","AppLayout","BoxOfficeMovieCard","Header","SkeletonWrapper","RankingMovieCard","RankingWrapper","rankingState","RankingCard","CardWrapper","MovieImg","MovieInfo","Ranking","ranking","setRanking","isLoading","setIsLoading","fetchRanking","data","get","process","env","REACT_APP_DB_HOST","error","message","Error","console","log","fakeArrayToSkeleton","Array","from","length","v","i","map","title"],"sources":["/Users/hwang-inseon/Desktop/portfolio/movie-app/client/src/routes/Ranking/index.jsx"],"sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useRecoilState} from \"recoil\";\nimport Stack from \"@mui/material/Stack\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport AppLayout from \"../../components/AppLayout\";\nimport {BoxOfficeMovieCard, Header, SkeletonWrapper} from \"../BoxOffice/styles\";\nimport {RankingMovieCard, RankingWrapper} from \"./styles\";\nimport {rankingState} from \"../../states/rankingState\";\nimport RankingCard from \"../../components/RankingCard\";\nimport {CardWrapper, MovieImg, MovieInfo} from \"../../components/BoxOfficeCard/styles\";\n\nconst Ranking = () => {\n  const [ranking, setRanking] = useRecoilState(rankingState);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchRanking = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const { data } = await axios.get(`${process.env.REACT_APP_DB_HOST}/api/ranking`);\n      setRanking(data);\n      setIsLoading(false);\n    } catch (error) {\n      let message = 'Unknown Error';\n      if (error instanceof Error) message = error.message;\n      console.log(message);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n\n  const fakeArrayToSkeleton = Array.from({ length: 20 }, (v, i) => i);\n\n  return (\n    <AppLayout>\n      <Header>\n        <span>\n          예매 순위\n        </span>\n      </Header>\n      <RankingWrapper>\n        {\n          isLoading\n            ? (\n              <SkeletonWrapper>\n                <Stack spacing={1}>\n                  <BoxOfficeMovieCard>\n                    {\n                      fakeArrayToSkeleton.map((v, i) => {\n                        return (\n                          <CardWrapper key={v}>\n                            <MovieImg>\n                              <Skeleton variant=\"rounded\" width=\"100%\" height={300} />\n                            </MovieImg>\n                            <MovieInfo>\n                              <p>\n                                <Skeleton variant=\"rounded\" width={100} height={14} />\n                              </p>\n                              <p>\n                                <Skeleton variant=\"rounded\" width=\"100%\" height={14} />\n                              </p>\n                            </MovieInfo>\n                          </CardWrapper>\n                        );\n                      })\n                    }\n                  </BoxOfficeMovieCard>\n                </Stack>\n              </SkeletonWrapper>\n            )\n            : (\n              <RankingMovieCard>\n                {\n                  ranking?.map((data, i) => {\n                    return (\n                      <RankingCard key={data.title} data={data} />\n                    );\n                  })\n                }\n              </RankingMovieCard>\n            )\n        }\n      </RankingWrapper>\n    </AppLayout>\n  );\n};\n\nexport default Ranking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}